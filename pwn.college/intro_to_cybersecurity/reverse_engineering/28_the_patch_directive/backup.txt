(255, 255, 255, ord('.')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('.')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(17, 250, 146, ord('/')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('|')),
(179, 209, 198, ord('|')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('|')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('_')),
(118, 169, 66, ord('/')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(17, 250, 146, ord('|')),
(17, 250, 146, ord('(')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(179, 209, 198, ord('|')),
(179, 209, 198, ord('|')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('\\')),
(196, 169, 155, ord('/')),
(196, 169, 155, ord('|')),
(118, 169, 66, ord('|')),
(118, 169, 66, ord('|')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord(' ')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(17, 250, 146, ord('\\')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('|')),
(179, 209, 198, ord('|')),
(179, 209, 198, ord('|')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('\\')),
(196, 169, 155, ord('/')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('|')),
(118, 169, 66, ord('|')),
(118, 169, 66, ord('|')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('|')),
(118, 169, 66, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(179, 209, 198, ord('|')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('|')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('|')),
(118, 169, 66, ord(' ')),
(118, 169, 66, ord('\\')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('\'')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('\'')),
]

hand_2_base_x = 1
hand_2_base_y = 1
hand_w = 2
hand_h = 2

header = struct.pack("<4sHBBI", magic, version, w, h, dir_rem)

dir_2 = struct.pack("<HBBBB", dir_code2, hand_2_base_x, hand_2_base_y, w, h)

#size = (w * h) << 2
#for _ in range(size):
#    dir_2 += b"\x21"

dir_1 = struct.pack("<H", dir_code1)

#for _ in range(size):
#    dir_1 += b"\x21"

pixels_bytes = bytearray()
for r, g, b, a in pixels:
    pixels_bytes += struct.pack("<BBBB", r, g, b, a)

pix_2_bytes = bytearray()
for r, g, b, a in pix_2:
    pix_2_bytes += struct.pack("<BBBB", r, g, b, a)

with open("file.cimg", "wb") as file:
    file.write(header)
    file.write(dir_2)
    file.write(pixels_bytes)
    file.write(dir_1)
    file.write(pix_2_bytes)

