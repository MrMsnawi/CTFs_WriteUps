#!/bin/env python3

import struct

magic = b"cIMG"
version = 3
w = 44
h = 11
dir_code = 13725

ud_border = [
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
(255, 255, 255, ord('-')),
]

lr_border = [
(255, 255, 255, ord('.')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('\'')),
]

c_char = [
(17, 250, 146, ord(' ')),
(17, 250, 146, ord(' ')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord(' ')),

(17, 250, 146, ord(' ')),
(17, 250, 146, ord('/')),
(17, 250, 146, ord(' ')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('|')),

(17, 250, 146, ord('|')),
(17, 250, 146, ord(' ')),
(17, 250, 146, ord('(')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord(' ')),

(17, 250, 146, ord(' ')),
(17, 250, 146, ord('\\')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('_')),
(17, 250, 146, ord('|')),
]

i_char = [
(179, 209, 198, ord(' ')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord(' ')),

(179, 209, 198, ord('|')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord(' ')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('|')),

(179, 209, 198, ord(' ')),
(179, 209, 198, ord('|')),
(179, 209, 198, ord(' ')),
(179, 209, 198, ord('|')),
(179, 209, 198, ord(' ')),

(179, 209, 198, ord(' ')),
(179, 209, 198, ord('|')),
(179, 209, 198, ord(' ')),
(179, 209, 198, ord('|')),
(179, 209, 198, ord(' ')),

(179, 209, 198, ord('|')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('_')),
(179, 209, 198, ord('|')),
]

m_char = [
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord(' ')),

(196, 169, 155, ord('|')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('\\')),
(196, 169, 155, ord('/')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('|')),

(196, 169, 155, ord('|')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('\\')),
(196, 169, 155, ord('/')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('|')),

(196, 169, 155, ord('|')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('|')),

(196, 169, 155, ord('|')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord(' ')),
(196, 169, 155, ord('|')),
(196, 169, 155, ord('_')),
(196, 169, 155, ord('|')),
]

g_char = [
(118, 169, 66, ord(' ')),
(118, 169, 66, ord(' ')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord(' ')),

(118, 169, 66, ord(' ')),
(118, 169, 66, ord('/')),
(118, 169, 66, ord(' ')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('|')),

(118, 169, 66, ord('|')),
(118, 169, 66, ord(' ')),
(118, 169, 66, ord('|')),
(118, 169, 66, ord(' ')),
(118, 169, 66, ord(' ')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord(' ')),

(118, 169, 66, ord('|')),
(118, 169, 66, ord(' ')),
(118, 169, 66, ord('|')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('|')),
(118, 169, 66, ord(' ')),
(118, 169, 66, ord('|')),

(118, 169, 66, ord(' ')),
(118, 169, 66, ord('\\')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('_')),
(118, 169, 66, ord('|')),
]

# build =========================================================


dir_rem = 8

header = struct.pack("<4sHBBI", magic, version, w, h, dir_rem)

# dire_code, x, y, w, h

# up down dirs ==================================================

up_dir = struct.pack("<HBBBB", dir_code, 1, 0, 42, 1)

down_dir = struct.pack("<HBBBB", dir_code, 1, 10, 42, 1)

ud_pixels = bytearray()
for r, g, b, a in ud_border:
    ud_pixels += struct.pack("<BBBB", r, g, b, a)

# left right border ============================================

left_dir = struct.pack("<HBBBB", dir_code, 0, 0, 1, 11)

right_dir = struct.pack("<HBBBB", dir_code, 43, 0, 1, 11)

lr_pixels = bytearray()
for r, g, b, a in lr_border:
    lr_pixels += struct.pack("<BBBB", r, g, b, a)

# c character ==================================================

c_dir = struct.pack("<HBBBB", dir_code, 6, 2, 6, 4)

c_pixels = bytearray()
for r, g, b, a in c_char:
    c_pixels += struct.pack("<BBBB", r, g, b, a)

# i character ==================================================

i_dir = struct.pack("<HBBBB", dir_code, 19, 2, 5, 5)

i_pixels = bytearray()
for r, g, b, a in i_char:
    i_pixels += struct.pack("<BBBB", r, g, b, a)

# m character ==================================================

m_dir = struct.pack("<HBBBB", dir_code, 25, 3, 8, 5)

m_pixels = bytearray()
for r, g, b, a in m_char:
    m_pixels += struct.pack("<BBBB", r, g, b, a)

# g character ==================================================

g_dir = struct.pack("<HBBBB", dir_code, 34, 2, 7, 5)
g_pixels = bytearray()
for r, g, b, a in g_char:
    g_pixels += struct.pack("<BBBB", r, g, b, a)

# write image ==================================================

with open("file.cimg", "wb") as file:
    file.write(header)
    file.write(up_dir + ud_pixels)
    file.write(down_dir + ud_pixels)
    file.write(left_dir + lr_pixels)
    file.write(right_dir + lr_pixels)
    file.write(c_dir + c_pixels)
    file.write(i_dir + i_pixels)
    file.write(m_dir + m_pixels)
    file.write(g_dir + g_pixels)
