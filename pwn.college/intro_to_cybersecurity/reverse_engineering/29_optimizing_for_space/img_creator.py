#!/bin/env python3

import struct

magic = b"cIMG"
version = 3
w = 76
h = 24
dir_code = 52965

ud_border = [
(255, 255, 255, ord('-')),
]

lr_border = [
(255, 255, 255, ord('.')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('|')),
(255, 255, 255, ord('\'')),
]

c_char = [
(255, 255, 255, ord(' ')),
(255, 255, 255, ord(' ')),
(255, 000, 000, ord('_')),
(255, 000, 000, ord('_')),
(255, 000, 000, ord('_')),
(255, 255, 255, ord(' ')),

(255, 255, 255, ord(' ')),
(255, 000, 000, ord('/')),
(255, 255, 255, ord(' ')),
(255, 000, 000, ord('_')),
(255, 000, 000, ord('_')),
(255, 000, 000, ord('|')),

(255, 000, 000, ord('|')),
(255, 255, 255, ord(' ')),
(255, 000, 000, ord('(')),
(255, 000, 000, ord('_')),
(255, 000, 000, ord('_')),
(255, 255, 255, ord(' ')),

(255, 255, 255, ord(' ')),
(255, 000, 000, ord('\\')),
(255, 000, 000, ord('_')),
(255, 000, 000, ord('_')),
(255, 000, 000, ord('_')),
(255, 000, 000, ord('|')),
]

i_char = [
(255, 255, 255, ord(' ')),
(000, 255, 000, ord('_')),
(000, 255, 000, ord('_')),
(000, 255, 000, ord('_')),
(255, 255, 255, ord(' ')),

(000, 255, 000, ord('|')),
(000, 255, 000, ord('_')),
(255, 255, 255, ord(' ')),
(000, 255, 000, ord('_')),
(000, 255, 000, ord('|')),

(255, 255, 255, ord(' ')),
(000, 255, 000, ord('|')),
(255, 255, 255, ord(' ')),
(000, 255, 000, ord('|')),
(255, 255, 255, ord(' ')),

(255, 255, 255, ord(' ')),
(000, 255, 000, ord('|')),
(255, 255, 255, ord(' ')),
(000, 255, 000, ord('|')),
(255, 255, 255, ord(' ')),

(000, 255, 000, ord('|')),
(000, 255, 000, ord('_')),
(000, 255, 000, ord('_')),
(000, 255, 000, ord('_')),
(000, 255, 000, ord('|')),
]

mu1_char = [
(000, 000, 255, ord('_')),
(000, 000, 255, ord('_')),
]

mu2_char = [
(000, 000, 255, ord('_')),
(000, 000, 255, ord('_')),
]
m_char = [
(000, 000, 255, ord('|')),
(255, 255, 255, ord(' ')),
(255, 255, 255, ord(' ')),
(000, 000, 255, ord('\\')),
(000, 000, 255, ord('/')),
(255, 255, 255, ord(' ')),
(255, 255, 255, ord(' ')),
(000, 000, 255, ord('|')),

(000, 000, 255, ord('|')),
(255, 255, 255, ord(' ')),
(000, 000, 255, ord('|')),
(000, 000, 255, ord('\\')),
(000, 000, 255, ord('/')),
(000, 000, 255, ord('|')),
(255, 255, 255, ord(' ')),
(000, 000, 255, ord('|')),

(000, 000, 255, ord('|')),
(255, 255, 255, ord(' ')),
(000, 000, 255, ord('|')),
(255, 255, 255, ord(' ')),
(255, 255, 255, ord(' ')),
(000, 000, 255, ord('|')),
(255, 255, 255, ord(' ')),
(000, 000, 255, ord('|')),

(000, 000, 255, ord('|')),
(000, 000, 255, ord('_')),
(000, 000, 255, ord('|')),
(255, 255, 255, ord(' ')),
(255, 255, 255, ord(' ')),
(000, 000, 255, ord('|')),
(000, 000, 255, ord('_')),
(000, 000, 255, ord('|')),
]


g_char = [
(255, 255, 255, ord(' ')),
(255, 255, 255, ord(' ')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('_')),
(255, 255, 255, ord(' ')),

(255, 255, 255, ord(' ')),
(128, 128, 128, ord('/')),
(255, 255, 255, ord(' ')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('|')),

(128, 128, 128, ord('|')),
(255, 255, 255, ord(' ')),
(128, 128, 128, ord('|')),
(255, 255, 255, ord(' ')),
(255, 255, 255, ord(' ')),
(128, 128, 128, ord('_')),
(255, 255, 255, ord(' ')),

(128, 128, 128, ord('|')),
(255, 255, 255, ord(' ')),
(128, 128, 128, ord('|')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('|')),
(255, 255, 255, ord(' ')),
(128, 128, 128, ord('|')),

(255, 255, 255, ord(' ')),
(128, 128, 128, ord('\\')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('_')),
(128, 128, 128, ord('|')),
]

# build =========================================================


dir_rem = 10

header = struct.pack("<4sHBBI", magic, version, w, h, dir_rem)

# dire_code, x, y, w, h

# up down dirs ==================================================

up_dir = struct.pack("<HBBBB", dir_code, 1, 0, 74, 1)

down_dir = struct.pack("<HBBBB", dir_code, 1, 23, 74, 1)

ud_pixels = bytearray()
for r, g, b, a in ud_border:
    ud_pixels += struct.pack("<BBBB", r, g, b, a) * 74

# left right border ============================================

left_dir = struct.pack("<HBBBB", dir_code, 0, 0, 1, 24)

right_dir = struct.pack("<HBBBB", dir_code, 75, 0, 1, 24)

lr_pixels = bytearray()
for r, g, b, a in lr_border:
    lr_pixels += struct.pack("<BBBB", r, g, b, a)

# c character ==================================================

c_dir = struct.pack("<HBBBB", dir_code, 23, 10, 6, 4)

c_pixels = bytearray()
for r, g, b, a in c_char:
    c_pixels += struct.pack("<BBBB", r, g, b, a)

# i character ==================================================

i_dir = struct.pack("<HBBBB", dir_code, 30, 9, 5, 5)

i_pixels = bytearray()
for r, g, b, a in i_char:
    i_pixels += struct.pack("<BBBB", r, g, b, a)

# m character ==================================================

mu1_dir = struct.pack("<HBBBB", dir_code, 37, 9, 2, 1)

mu1_p = bytearray()
for r, g, b, a in mu1_char:
    mu1_p += struct.pack("<BBBB", r, g, b, a)

mu2_dir = struct.pack("<HBBBB", dir_code, 41, 9, 2, 1)

mu2_p = bytearray()
for r, g, b, a in mu2_char:
    mu2_p += struct.pack("<BBBB", r, g, b, a)

m_dir = struct.pack("<HBBBB", dir_code, 36, 10, 8, 4)

m_pixels = bytearray()
for r, g, b, a in m_char:
    m_pixels += struct.pack("<BBBB", r, g, b, a)

# g character ==================================================

g_dir = struct.pack("<HBBBB", dir_code, 45, 9, 7, 5)
g_pixels = bytearray()
for r, g, b, a in g_char:
    g_pixels += struct.pack("<BBBB", r, g, b, a)

# write image ==================================================

with open("file.cimg", "wb") as file:
    file.write(header)
    file.write(up_dir + ud_pixels)
    file.write(down_dir + ud_pixels)
    file.write(left_dir + lr_pixels)
    file.write(right_dir + lr_pixels)
    file.write(c_dir + c_pixels)
    file.write(i_dir + i_pixels)
    file.write(mu1_dir + mu1_p)
    file.write(mu2_dir + mu2_p)
    file.write(m_dir + m_pixels)
    file.write(g_dir + g_pixels)
